library(rgdal)
library(raster)
library(caret)
library(snow)

## set the working directory
setwd("")

##create an object of the rasters in the directory. only these rasters will be used for the classification
rasters <- list.files(pattern='\\.tif$')

##create a raster stack of the images
img <- stack(rasters)

##get names of the images
names(img)

##rename the images accordingly
names(img) <- paste0(c("2", "3", "4", "5", "6", "7", "8", "9", "11", "12", "8A"))

## train the data
trainData <- shapefile(".shp")

##set response col as class
responseCol <- "class"

dfAll = data.frame(matrix(vector(), nrow = 0, ncol = length(names(img)) + 1))   
 for (i in 1:length(unique(trainData[[responseCol]]))){                          
  category <- unique(trainData[[responseCol]])[i]
  categorymap <- trainData[trainData[[responseCol]] == category,]
  dataSet <- extract(img, categorymap)
  dataSet <- dataSet[!unlist(lapply(dataSet, is.null))]
  dataSet <- lapply(dataSet, function(x){cbind(x, class = as.numeric(rep(category, nrow(x))))})
  df <- do.call("rbind", dataSet)
  dfAll <- rbind(dfAll, df)
}

nsamples <- 1000
 sdfAll <- subset(dfAll[sample(1:nrow(dfAll), nsamples), ])

 modFit_rf <- train(as.factor(class) ~ B3 + B4 + B5, method = "rf", data = sdfAll)

beginCluster()

preds_rf <- clusterR(img, raster::predict, args = list(model = modFit_rf))

endCluster()